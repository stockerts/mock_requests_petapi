name: On-Demand - API Request Generation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  api-request-generation:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: API Requests
      run: |
        # Start run
        
        # Variables file location
        source ./variables.sh
        
        # Set number of Iterations
        iterations=$iterations
        for ((i=1; i<=iterations; i++)); do
        # Display the current iteration number
        echo "Iteration: $i"

          # Curl Block

          # Create variable matches for method, url and body from endpoints file
          while IFS='|' read -r method path body; do
        
          # Create variable for time
          timestamp=$(TZ="America/Los_Angeles" date "+%H:%M:%S")

          # Create URL
          url="$protocol://$domain$path"
          
          # Encode spaced within url, create encoded_url variable
          encoded_url="${url// /%20}"

          # Request Match JWT endpoint, capture token, create token variable
          if [[ "$encoded_url" == */JWT ]]; then
            response=$(curl -s -X "$method" "$encoded_url" -H "Content-Type: application/json" -H "XC-Auth-Obj: $xc_auth_value" -d "$body")
            token=$(echo "$response" | jq -r '.token')  # Extract the token value from the response
            echo "[$timestamp PST] $method to $encoded_url : $response_code"
            continue
          fi

          # Request Match Update endpoint, use token variable
          if [[ "$encoded_url" == */Update ]]; then
            response_code=$(curl -o /dev/null -s -w "%{http_code}" -X "$method" "$encoded_url" -H "Content-Type: application/json" -H "XC-Auth-Obj: $xc_auth_value" -H "Authorization: Bearer $token" -d "$body")
            echo "[$timestamp PST] $method to $encoded_url : $response_code"
            continue
          fi
          
          # Requests for all other endpoints
          if [[ "$method" == "POST" || "$method" == "PUT" ]]; then
            response_code=$(curl -o /dev/null -s -w "%{http_code}" -X "$method" "$encoded_url" -H "Content-Type: application/json" -H "XC-Auth-Obj: $xc_auth_value" -d "$body")
            echo "[$timestamp PST] $method to $encoded_url : $response_code"
          else
            response_code=$(curl -o /dev/null -s -w "%{http_code}" -X "$method" "$encoded_url" -H "XC-Auth-Obj: $xc_auth_value")
            echo "[$timestamp PST] $method to $encoded_url : $response_code"
          fi

          # Add delayed between requests  
          sleep $delay

          # End Curl block, set endpoints file
          done < endpoints.txt
        
        #End iterations block  
        done
